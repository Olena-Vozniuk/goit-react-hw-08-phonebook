{"version":3,"file":"static/js/854.550ab451.chunk.js","mappings":"uQAOaA,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACI,4BACF,yCACA,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAClBC,SAjBiB,SAACC,EAAQC,GAC1BC,QAAQC,IAAIH,GAChBT,GAASa,EAAAA,EAAAA,IAASJ,IAClBC,EAAQI,WACT,EAMG,UASE,UAAC,KAAD,YACE,SAACC,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,SAAC,KAAD,CACEC,KAAK,OACLd,KAAK,OACLe,UAAWC,EAAAA,EACXC,MAAM,OACNC,MAAO,CAACC,MAAO,UAInB,SAACP,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,SAAC,KAAD,CACEb,KAAK,QACLc,KAAK,QACLC,UAAWC,EAAAA,EACXC,MAAM,QACNC,MAAO,CAACC,MAAO,UAGnB,SAACP,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,SAAC,KAAD,CACEC,KAAK,WACLd,KAAK,WACLe,UAAWC,EAAAA,EACXC,MAAM,WACNC,MAAO,CAACC,MAAO,UAGlB,SAACP,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACC,SAACO,EAAA,EAAD,CAAQN,KAAK,SAASO,GAAI,CAACR,OAAQ,GACjCS,QAAQ,YACRC,MAAM,UACNL,MAAO,CAACC,MAAO,KAHjB,+BAWX,E,UCnEc,SAASK,IACpB,OACI,4BACI,eAAIN,MAAO,CAACO,WAAY,UAAxB,2BACA,SAAC7B,EAAD,KACA,SAAC,KAAD,CAAM8B,GAAI,SAAV,4CAKX,C,sHCNYC,EAAgBC,EAAAA,KAAaC,MAAM,CAC5C7B,KAAM4B,EAAAA,KACDE,OACHC,IAAI,EAAG,qBACPC,IAAI,GAAI,oBACLC,SAAS,YACdC,OAAQN,EAAAA,KACHO,QAVW,6EACE,gGAUbF,SAAS,cAGLG,EAAcR,EAAAA,KAAaC,MAAM,CAC5C5B,MAAO2B,EAAAA,KACJO,QAAQ,4CAA6C,CACpDE,QAAS,wBAEVJ,SAAS,uBACZ/B,SAAU0B,EAAAA,KACPG,IAAI,EAAG,sCACPE,SAAS,4BAGD7B,EAAiBwB,EAAAA,KAAaC,MAAM,CAC3C7B,KAAM4B,EAAAA,KACHE,OACHC,IAAI,EAAG,qBACPC,IAAI,GAAI,oBACTC,WACHhC,MAAO2B,EAAAA,KACJO,QAAQ,4CAA6C,CACpDE,QAAS,wBAEVJ,WACH/B,SAAU0B,EAAAA,KACPG,IAAI,GACJI,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBF,Y","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js","utils/formValidation.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Box, Button } from '@mui/material';\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-mui';\nimport { register } from 'redux/auth/auth-operations';\nimport { RegisterSchema } from '../../utils/formValidation';\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (values, actions) => {\n        console.log(values);\n    dispatch(register(values));\n    actions.resetForm();\n  };\n        \n\n    return (\n        <div>\n      <title>Register</title>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Box margin={1}>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              component={TextField}\n              label=\"Name\"\n              style={{width: 400}}\n            />\n          \n          </Box>\n          <Box margin={1}>\n            <Field\n              name=\"email\"\n              type=\"email\"\n              component={TextField}\n              label=\"Email\"\n              style={{width: 400}}\n            /> \n          </Box>\n          <Box margin={1}>\n            <Field\n              type=\"password\"\n              name=\"password\"\n              component={TextField}\n              label=\"Password\"\n              style={{width: 400}}\n            />\n          </Box>\n           <Box margin={1}>\n            <Button type=\"submit\" sx={{margin: 2}}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{width: 400}}\n              >\n              Register</Button>\n          </Box>\n        </Form>\n      </Formik>\n    </div>\n  );\n};","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Link } from 'react-router-dom';\n\nexport default function RegisterPage() {\n    return (\n        <div>\n            <h2 style={{textAligne: 'center'}}>Registration</h2>\n            <RegisterForm />\n            <Link to={'/login'}>\n          Don't have an account? Login\n        </Link>\n        </div>\n    );\n};","import * as Yup from 'yup';\n\n// const nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n// const nameRegError = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer\";\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst phoneRegError = \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\n\nexport const ContactSchema = Yup.object().shape({\n    name: Yup.string()\n        .trim()\n     .min(2, 'Name is too Short')\n     .max(12, 'Name is too Long')\n        .required('Required'),\n    number: Yup.string()\n        .matches(phoneRegExp, phoneRegError)\n        .required('Required'),\n});\n \nexport const LogInSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, {\n      message: 'Email is not valid.',\n    })\n    .required('Please, enter email'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Please, enter password'),\n});\n\nexport const RegisterSchema = Yup.object().shape({\n      name: Yup.string()\n        .trim()\n     .min(2, 'Name is too Short')\n     .max(12, 'Name is too Long')\n    .required(),\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, {\n      message: 'Email is not valid.',\n    })\n    .required(),\n  password: Yup.string()\n    .min(6)\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .required(),\n});\n"],"names":["RegisterForm","dispatch","useDispatch","initialValues","name","email","password","validationSchema","RegisterSchema","onSubmit","values","actions","console","log","register","resetForm","Box","margin","type","component","TextField","label","style","width","Button","sx","variant","color","RegisterPage","textAligne","to","ContactSchema","Yup","shape","trim","min","max","required","number","matches","LogInSchema","message"],"sourceRoot":""}