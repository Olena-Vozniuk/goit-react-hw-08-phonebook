{"version":3,"file":"static/js/337.eb999bbc.chunk.js","mappings":"6RAEaA,E,QAAUC,GAAAA,IAAH,gJ,SCSPC,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OACI,UAACP,EAAD,YACI,sCACN,SAAC,KAAD,CACEQ,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAClBC,SAfiB,SAACC,EAAQC,GAC1BZ,GAASa,EAAAA,EAAAA,IAAMF,IAASG,SAASC,MAAMX,GACvCY,QAAQC,IAAId,GACZS,EAAQM,WACX,EAKC,UAQE,UAAC,KAAD,YACA,SAACC,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,QAASC,UAAWC,EAAAA,EAC1CC,MAAM,QACNC,MAAO,CAACC,MAAO,UAGpB,SAACR,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACG,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,WAAYC,UAAWC,EAAAA,EACjDC,MAAM,WACNC,MAAO,CAACC,MAAO,UAEnB,SAACR,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACA,SAACQ,EAAA,EAAD,CAAQP,KAAK,SAASQ,GAAI,CAACT,OAAQ,GAC/BU,QAAQ,YACRC,MAAM,UACNL,MAAO,CAAEC,MAAO,KAHpB,0BAOGxB,IAAW,cAAGuB,MAAO,CAACK,MAAM,OAAjB,mDAGvB,E,UCrDc,SAASC,IAEpB,OACI,iBAAKN,MAAO,CAAEO,QAAS,OAAQC,cAAe,SAAUC,YAAa,UAArE,WACI,oCACA,SAACpC,EAAD,KACA,SAAC,KAAD,CAAMqC,GAAI,YAAV,+CAKX,C,sHCPYC,EAAgBC,EAAAA,KAAaC,MAAM,CAC5CjB,KAAMgB,EAAAA,KACDE,OACHC,IAAI,EAAG,qBACPC,IAAI,GAAI,oBACLC,SAAS,YACdC,OAAQN,EAAAA,KACHO,QAVW,6EACE,gGAUbF,SAAS,cAGLlC,EAAc6B,EAAAA,KAAaC,MAAM,CAC5CjC,MAAOgC,EAAAA,KACJO,QAAQ,4CAA6C,CACpDC,QAAS,wBAEVH,SAAS,uBACZpC,SAAU+B,EAAAA,KACPG,IAAI,EAAG,sCACPE,SAAS,4BAGDI,EAAiBT,EAAAA,KAAaC,MAAM,CAC3CjB,KAAMgB,EAAAA,KACHE,OACHC,IAAI,EAAG,qBACPC,IAAI,GAAI,oBACTC,WACHrC,MAAOgC,EAAAA,KACJO,QAAQ,4CAA6C,CACpDC,QAAS,wBAEVH,WACHpC,SAAU+B,EAAAA,KACPG,IAAI,GACJI,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBF,Y","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.js","utils/formValidation.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nfont-size: 24px;\npadding: 0;\n`;","import { useState } from 'react';\nimport { logIn } from \"redux/auth/auth-operations\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-mui';\nimport { Box, Button } from '@mui/material';\nimport { LogInSchema } from '../../utils/formValidation';\nimport { Wrapper } from './LoginForm.styled';\n\n\n\nexport const LogInForm = () => {\n    const dispatch = useDispatch();\n    const [authErr, setAuthErr] = useState(null);\n   \n\n    const handleSubmit = (values, actions) => {\n        dispatch(logIn(values)).unwrap().catch(setAuthErr);\n        console.log(authErr);\n        actions.resetForm();\n    };\n\n    return (\n        <Wrapper >\n            <title>Login</title>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LogInSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n        <Box margin={1}>\n            <Field type=\"text\" name=\"email\"  component={TextField}\n              label=\"Email\"\n              style={{width: 400}} />\n          </Box>\n\n         <Box margin={1}>\n            <Field type=\"password\" name=\"password\"  component={TextField}\n              label=\"Password\"\n              style={{width: 400}} />\n          </Box>\n          <Box margin={1}>\n          <Button type=\"submit\" sx={{margin: 2}}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ width: 400 }}>LogIn</Button>\n                    </Box>                   \n        </Form>\n            </Formik>\n            {authErr && <p style={{color:'red'}}>You entered wrong email or password</p>}\n        </Wrapper>\n    )\n}","import { LogInForm } from 'components/LoginForm/LoginForm';\nimport { Link } from 'react-router-dom';\n\nexport default function LoginPage() {\n    \n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', aligneItems: 'center'}}> \n            <h2>Log In</h2>\n            <LogInForm />\n            <Link to={'/register'}>\n          Don't have an account? Register\n        </Link>\n        </div>\n    )\n};","import * as Yup from 'yup';\n\n// const nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n// const nameRegError = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer\";\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst phoneRegError = \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\n\nexport const ContactSchema = Yup.object().shape({\n    name: Yup.string()\n        .trim()\n     .min(2, 'Name is too Short')\n     .max(12, 'Name is too Long')\n        .required('Required'),\n    number: Yup.string()\n        .matches(phoneRegExp, phoneRegError)\n        .required('Required'),\n});\n \nexport const LogInSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, {\n      message: 'Email is not valid.',\n    })\n    .required('Please, enter email'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Please, enter password'),\n});\n\nexport const RegisterSchema = Yup.object().shape({\n      name: Yup.string()\n        .trim()\n     .min(2, 'Name is too Short')\n     .max(12, 'Name is too Long')\n    .required(),\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, {\n      message: 'Email is not valid.',\n    })\n    .required(),\n  password: Yup.string()\n    .min(6)\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    .required(),\n});\n"],"names":["Wrapper","styled","LogInForm","dispatch","useDispatch","useState","authErr","setAuthErr","initialValues","email","password","validationSchema","LogInSchema","onSubmit","values","actions","logIn","unwrap","catch","console","log","resetForm","Box","margin","type","name","component","TextField","label","style","width","Button","sx","variant","color","LoginPage","display","flexDirection","aligneItems","to","ContactSchema","Yup","shape","trim","min","max","required","number","matches","message","RegisterSchema"],"sourceRoot":""}